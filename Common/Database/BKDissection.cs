// **********************************************************
// This file is Auto generated by DBGen
// Any changes will be lost when the file is regenerated
// **********************************************************
using System;
using BankLink.Practice.Common.Entities;
using System.Xml.Serialization;


namespace BankLink.Practice.BooksIO
{
	/// <summary>
	/// BK - Dissection class
	/// </summary>
	public partial class BKDissection 
	{


		/// <summary>
		/// SequenceNo property
		/// </summary>
		[XmlAttribute("SequenceNo", DataType = "int")]
		public Int32 SequenceNo { get; set; }



		/// <summary>
		/// Account property
		/// </summary>
		[XmlAttribute("Account", DataType = "string")]
		public String Account { get; set; }



		/// <summary>
		/// Amount property
		/// </summary>
		[XmlAttribute("Amount", DataType = "long")]
		public Int64 Amount { get; set; }



		/// <summary>
		/// GSTClass property
		/// </summary>
		[XmlAttribute("GSTClass", DataType = "unsignedByte")]
		public byte GSTClass { get; set; }



		/// <summary>
		/// GSTAmount property
		/// </summary>
		[XmlAttribute("GSTAmount", DataType = "long")]
		public Int64 GSTAmount { get; set; }



		/// <summary>
		/// Quantity property
		/// </summary>
		[XmlAttribute("Quantity", DataType = "long")]
		public Int64 Quantity { get; set; }



		/// <summary>
		/// OldNarration property
		/// </summary>
		[XmlAttribute("OldNarration", DataType = "string")]
		public String OldNarration { get; set; }



		/// <summary>
		/// HasBeenEdited property
		/// </summary>
		[XmlAttribute("HasBeenEdited", DataType = "boolean")]
		public bool HasBeenEdited { get; set; }



		/// <summary>
		/// JournalType property
		/// </summary>
		[XmlAttribute("JournalType", DataType = "unsignedByte")]
		public byte JournalType { get; set; }



		/// <summary>
		/// GSTHasBeenEdited property
		/// </summary>
		[XmlAttribute("GSTHasBeenEdited", DataType = "boolean")]
		public bool GSTHasBeenEdited { get; set; }



		/// <summary>
		/// PayeeNumber property
		/// </summary>
		[XmlAttribute("PayeeNumber", DataType = "int")]
		public Int32 PayeeNumber { get; set; }



		/// <summary>
		/// Notes property
		/// </summary>
		[XmlAttribute("Notes", DataType = "string")]
		public String Notes { get; set; }



		/// <summary>
		/// ECodingImportNotes property
		/// </summary>
		[XmlAttribute("ECodingImportNotes", DataType = "string")]
		public String ECodingImportNotes { get; set; }



		/// <summary>
		/// GLNarration property
		/// </summary>
		[XmlAttribute("GLNarration", DataType = "string")]
		public String GLNarration { get; set; }



		/// <summary>
		/// LinkedJournalDate property
		/// </summary>
		[XmlAttribute("LinkedJournalDate", DataType = "int")]
		public Int32 LinkedJournalDate { get; set; }



		/// <summary>
		/// SFImputedCredit property
		/// </summary>
		[XmlAttribute("SFImputedCredit", DataType = "long")]
		public Int64 SFImputedCredit { get; set; }



		/// <summary>
		/// SFTaxFreeDist property
		/// </summary>
		[XmlAttribute("SFTaxFreeDist", DataType = "long")]
		public Int64 SFTaxFreeDist { get; set; }



		/// <summary>
		/// SFTaxExemptDist property
		/// </summary>
		[XmlAttribute("SFTaxExemptDist", DataType = "long")]
		public Int64 SFTaxExemptDist { get; set; }



		/// <summary>
		/// SFTaxDeferredDist property
		/// </summary>
		[XmlAttribute("SFTaxDeferredDist", DataType = "long")]
		public Int64 SFTaxDeferredDist { get; set; }



		/// <summary>
		/// SFTFNCredits property
		/// </summary>
		[XmlAttribute("SFTFNCredits", DataType = "long")]
		public Int64 SFTFNCredits { get; set; }



		/// <summary>
		/// SFForeignIncome property
		/// </summary>
		[XmlAttribute("SFForeignIncome", DataType = "long")]
		public Int64 SFForeignIncome { get; set; }



		/// <summary>
		/// SFForeignTaxCredits property
		/// </summary>
		[XmlAttribute("SFForeignTaxCredits", DataType = "long")]
		public Int64 SFForeignTaxCredits { get; set; }



		/// <summary>
		/// SFCapitalGainsIndexed property
		/// </summary>
		[XmlAttribute("SFCapitalGainsIndexed", DataType = "long")]
		public Int64 SFCapitalGainsIndexed { get; set; }



		/// <summary>
		/// SFCapitalGainsDisc property
		/// </summary>
		[XmlAttribute("SFCapitalGainsDisc", DataType = "long")]
		public Int64 SFCapitalGainsDisc { get; set; }



		/// <summary>
		/// SFSuperFieldsEdited property
		/// </summary>
		[XmlAttribute("SFSuperFieldsEdited", DataType = "boolean")]
		public bool SFSuperFieldsEdited { get; set; }



		/// <summary>
		/// SFCapitalGainsOther property
		/// </summary>
		[XmlAttribute("SFCapitalGainsOther", DataType = "long")]
		public Int64 SFCapitalGainsOther { get; set; }



		/// <summary>
		/// SFOtherExpenses property
		/// </summary>
		[XmlAttribute("SFOtherExpenses", DataType = "long")]
		public Int64 SFOtherExpenses { get; set; }



		/// <summary>
		/// SFCGTDate property
		/// </summary>
		[XmlAttribute("SFCGTDate", DataType = "int")]
		public Int32 SFCGTDate { get; set; }



		/// <summary>
		/// ExternalGUID property
		/// </summary>
		[XmlAttribute("ExternalGUID", DataType = "string")]
		public String ExternalGUID { get; set; }



		/// <summary>
		/// DocumentTitle property
		/// </summary>
		[XmlAttribute("DocumentTitle", DataType = "string")]
		public String DocumentTitle { get; set; }



		/// <summary>
		/// DocumentStatusUpdateRequired property
		/// </summary>
		[XmlAttribute("DocumentStatusUpdateRequired", DataType = "boolean")]
		public bool DocumentStatusUpdateRequired { get; set; }



		/// <summary>
		/// NotesRead property
		/// </summary>
		[XmlAttribute("NotesRead", DataType = "boolean")]
		public bool NotesRead { get; set; }



		/// <summary>
		/// ImportNotesRead property
		/// </summary>
		[XmlAttribute("ImportNotesRead", DataType = "boolean")]
		public bool ImportNotesRead { get; set; }



		/// <summary>
		/// Reference property
		/// </summary>
		[XmlAttribute("Reference", DataType = "string")]
		public String Reference { get; set; }



		/// <summary>
		/// SFFranked property
		/// </summary>
		[XmlAttribute("SFFranked", DataType = "long")]
		public Int64 SFFranked { get; set; }



		/// <summary>
		/// SFUnfranked property
		/// </summary>
		[XmlAttribute("SFUnfranked", DataType = "long")]
		public Int64 SFUnfranked { get; set; }



		/// <summary>
		/// SFInterest property
		/// </summary>
		[XmlAttribute("SFInterest", DataType = "long")]
		public Int64 SFInterest { get; set; }



		/// <summary>
		/// SFCapitalGainsForeignDisc property
		/// </summary>
		[XmlAttribute("SFCapitalGainsForeignDisc", DataType = "long")]
		public Int64 SFCapitalGainsForeignDisc { get; set; }



		/// <summary>
		/// SFRent property
		/// </summary>
		[XmlAttribute("SFRent", DataType = "long")]
		public Int64 SFRent { get; set; }



		/// <summary>
		/// SFSpecialIncome property
		/// </summary>
		[XmlAttribute("SFSpecialIncome", DataType = "long")]
		public Int64 SFSpecialIncome { get; set; }



		/// <summary>
		/// SFOtherTaxCredit property
		/// </summary>
		[XmlAttribute("SFOtherTaxCredit", DataType = "long")]
		public Int64 SFOtherTaxCredit { get; set; }



		/// <summary>
		/// SFNonResidentTax property
		/// </summary>
		[XmlAttribute("SFNonResidentTax", DataType = "long")]
		public Int64 SFNonResidentTax { get; set; }



		/// <summary>
		/// SFMemberID property
		/// </summary>
		[XmlAttribute("SFMemberID", DataType = "string")]
		public String SFMemberID { get; set; }



		/// <summary>
		/// SFForeignCapitalGainsCredit property
		/// </summary>
		[XmlAttribute("SFForeignCapitalGainsCredit", DataType = "long")]
		public Int64 SFForeignCapitalGainsCredit { get; set; }



		/// <summary>
		/// SFMemberComponent property
		/// </summary>
		[XmlAttribute("SFMemberComponent", DataType = "unsignedByte")]
		public byte SFMemberComponent { get; set; }



		/// <summary>
		/// PercentAmount property
		/// </summary>
		[XmlAttribute("PercentAmount", DataType = "long")]
		public Int64 PercentAmount { get; set; }



		/// <summary>
		/// AmountTypeIsPercent property
		/// </summary>
		[XmlAttribute("AmountTypeIsPercent", DataType = "boolean")]
		public bool AmountTypeIsPercent { get; set; }



		/// <summary>
		/// SFFundID property
		/// </summary>
		[XmlAttribute("SFFundID", DataType = "int")]
		public Int32 SFFundID { get; set; }



		/// <summary>
		/// SFMemberAccountID property
		/// </summary>
		[XmlAttribute("SFMemberAccountID", DataType = "int")]
		public Int32 SFMemberAccountID { get; set; }



		/// <summary>
		/// SFFundCode property
		/// </summary>
		[XmlAttribute("SFFundCode", DataType = "string")]
		public String SFFundCode { get; set; }



		/// <summary>
		/// SFMemberAccountCode property
		/// </summary>
		[XmlAttribute("SFMemberAccountCode", DataType = "string")]
		public String SFMemberAccountCode { get; set; }



		/// <summary>
		/// SFTransactionID property
		/// </summary>
		[XmlAttribute("SFTransactionID", DataType = "int")]
		public Int32 SFTransactionID { get; set; }



		/// <summary>
		/// SFTransactionCode property
		/// </summary>
		[XmlAttribute("SFTransactionCode", DataType = "string")]
		public String SFTransactionCode { get; set; }



		/// <summary>
		/// SFCapitalGainsFractionHalf property
		/// </summary>
		[XmlAttribute("SFCapitalGainsFractionHalf", DataType = "boolean")]
		public bool SFCapitalGainsFractionHalf { get; set; }



		/// <summary>
		/// AuditRecordID property
		/// </summary>
		[XmlAttribute("AuditRecordID", DataType = "int")]
		public Int32 AuditRecordID { get; set; }



		/// <summary>
		/// JobCode property
		/// </summary>
		[XmlAttribute("JobCode", DataType = "string")]
		public String JobCode { get; set; }



		/// <summary>
		/// TaxInvoice property
		/// </summary>
		[XmlAttribute("TaxInvoice", DataType = "boolean")]
		public bool TaxInvoice { get; set; }



		/// <summary>
		/// ForeignCurrencyAmount property
		/// </summary>
		[XmlAttribute("ForeignCurrencyAmount", DataType = "long")]
		public Int64 ForeignCurrencyAmount { get; set; }



		/// <summary>
		/// ForexDocumentDate property
		/// </summary>
		[XmlAttribute("ForexDocumentDate", DataType = "int")]
		public Int32 ForexDocumentDate { get; set; }



		/// <summary>
		/// OpeningBalanceCurrency property
		/// </summary>
		[XmlAttribute("OpeningBalanceCurrency", DataType = "string")]
		public String OpeningBalanceCurrency { get; set; }


		/// <summary>
		/// Class Begin Token
		/// </summary>
		public const byte BeginToken = 180;
		/// <summary>
		/// Class End Token
		/// </summary>
		public const byte EndToken = 181;
		/// <summary>
		/// Write to BKStream
		/// </summary>
		public void WriteBKStream(BankLinkTokenStreamWriter s)
		{
			s.WriteToken(180);
			s.WriteInt32Value(182, SequenceNo);
			s.WriteShortStringValue(183, Account);
			s.WriteMoneyValue(184, Amount);
			s.WriteByteValue(185, GSTClass);
			s.WriteMoneyValue(186, GSTAmount);
			s.WriteMoneyValue(187, Quantity);
			s.WriteShortStringValue(188, OldNarration);
			s.WriteBooleanValue(189, HasBeenEdited);
			s.WriteByteValue(190, JournalType);
			s.WriteBooleanValue(191, GSTHasBeenEdited);
			s.WriteInt32Value(192, PayeeNumber);
			s.WriteAnsiStringValue(193, Notes);
			s.WriteAnsiStringValue(194, ECodingImportNotes);
			s.WriteAnsiStringValue(195, GLNarration);
			s.WriteJulDateValue(196, LinkedJournalDate);
			s.WriteMoneyValue(197, SFImputedCredit);
			s.WriteMoneyValue(198, SFTaxFreeDist);
			s.WriteMoneyValue(199, SFTaxExemptDist);
			s.WriteMoneyValue(200, SFTaxDeferredDist);
			s.WriteMoneyValue(201, SFTFNCredits);
			s.WriteMoneyValue(202, SFForeignIncome);
			s.WriteMoneyValue(203, SFForeignTaxCredits);
			s.WriteMoneyValue(204, SFCapitalGainsIndexed);
			s.WriteMoneyValue(205, SFCapitalGainsDisc);
			s.WriteBooleanValue(206, SFSuperFieldsEdited);
			s.WriteMoneyValue(207, SFCapitalGainsOther);
			s.WriteMoneyValue(208, SFOtherExpenses);
			s.WriteInt32Value(209, SFCGTDate);
			s.WriteAnsiStringValue(210, ExternalGUID);
			s.WriteAnsiStringValue(211, DocumentTitle);
			s.WriteBooleanValue(212, DocumentStatusUpdateRequired);
			s.WriteBooleanValue(213, NotesRead);
			s.WriteBooleanValue(214, ImportNotesRead);
			s.WriteShortStringValue(215, Reference);
			s.WriteMoneyValue(216, SFFranked);
			s.WriteMoneyValue(217, SFUnfranked);
			s.WriteMoneyValue(218, SFInterest);
			s.WriteMoneyValue(219, SFCapitalGainsForeignDisc);
			s.WriteMoneyValue(220, SFRent);
			s.WriteMoneyValue(221, SFSpecialIncome);
			s.WriteMoneyValue(222, SFOtherTaxCredit);
			s.WriteMoneyValue(223, SFNonResidentTax);
			s.WriteShortStringValue(224, SFMemberID);
			s.WriteMoneyValue(225, SFForeignCapitalGainsCredit);
			s.WriteByteValue(226, SFMemberComponent);
			s.WriteMoneyValue(227, PercentAmount);
			s.WriteBooleanValue(228, AmountTypeIsPercent);
			s.WriteInt32Value(229, SFFundID);
			s.WriteInt32Value(230, SFMemberAccountID);
			s.WriteShortStringValue(231, SFFundCode);
			s.WriteShortStringValue(232, SFMemberAccountCode);
			s.WriteInt32Value(233, SFTransactionID);
			s.WriteAnsiStringValue(234, SFTransactionCode);
			s.WriteBooleanValue(235, SFCapitalGainsFractionHalf);
			s.WriteInt32Value(236, AuditRecordID);
			s.WriteShortStringValue(237, JobCode);
			s.WriteBooleanValue(238, TaxInvoice);
			s.WriteMoneyValue(240, ForeignCurrencyAmount);
			s.WriteJulDateValue(241, ForexDocumentDate);
			s.WriteShortStringValue(242, OpeningBalanceCurrency);
			s.WriteToken(181);
		}

		/// <summary>
		/// Default Constructor 
		/// </summary>
		public BKDissection ()
		{}
		/// <summary>
		/// Construct from BKStreamReader
		/// </summary>
		public BKDissection (BankLinkTokenStreamReader s)
		{
			var token = BeginToken;
			while (token != EndToken)
			{
				switch (token)
				{
			case 182 :
				SequenceNo = s.ReadInt32Value("SequenceNo");
				break;
			case 183 :
				Account = s.ReadShortStringValue("Account");
				break;
			case 184 :
				Amount = s.ReadMoneyValue("Amount");
				break;
			case 185 :
				GSTClass = s.ReadByteValue("GSTClass");
				break;
			case 186 :
				GSTAmount = s.ReadMoneyValue("GSTAmount");
				break;
			case 187 :
				Quantity = s.ReadMoneyValue("Quantity");
				break;
			case 188 :
				OldNarration = s.ReadShortStringValue("OldNarration");
				break;
			case 189 :
				HasBeenEdited = s.ReadBooleanValue("HasBeenEdited");
				break;
			case 190 :
				JournalType = s.ReadByteValue("JournalType");
				break;
			case 191 :
				GSTHasBeenEdited = s.ReadBooleanValue("GSTHasBeenEdited");
				break;
			case 192 :
				PayeeNumber = s.ReadInt32Value("PayeeNumber");
				break;
			case 193 :
				Notes = s.ReadAnsiStringValue("Notes");
				break;
			case 194 :
				ECodingImportNotes = s.ReadAnsiStringValue("ECodingImportNotes");
				break;
			case 195 :
				GLNarration = s.ReadAnsiStringValue("GLNarration");
				break;
			case 196 :
				LinkedJournalDate = s.ReadJulDateValue("LinkedJournalDate");
				break;
			case 197 :
				SFImputedCredit = s.ReadMoneyValue("SFImputedCredit");
				break;
			case 198 :
				SFTaxFreeDist = s.ReadMoneyValue("SFTaxFreeDist");
				break;
			case 199 :
				SFTaxExemptDist = s.ReadMoneyValue("SFTaxExemptDist");
				break;
			case 200 :
				SFTaxDeferredDist = s.ReadMoneyValue("SFTaxDeferredDist");
				break;
			case 201 :
				SFTFNCredits = s.ReadMoneyValue("SFTFNCredits");
				break;
			case 202 :
				SFForeignIncome = s.ReadMoneyValue("SFForeignIncome");
				break;
			case 203 :
				SFForeignTaxCredits = s.ReadMoneyValue("SFForeignTaxCredits");
				break;
			case 204 :
				SFCapitalGainsIndexed = s.ReadMoneyValue("SFCapitalGainsIndexed");
				break;
			case 205 :
				SFCapitalGainsDisc = s.ReadMoneyValue("SFCapitalGainsDisc");
				break;
			case 206 :
				SFSuperFieldsEdited = s.ReadBooleanValue("SFSuperFieldsEdited");
				break;
			case 207 :
				SFCapitalGainsOther = s.ReadMoneyValue("SFCapitalGainsOther");
				break;
			case 208 :
				SFOtherExpenses = s.ReadMoneyValue("SFOtherExpenses");
				break;
			case 209 :
				SFCGTDate = s.ReadInt32Value("SFCGTDate");
				break;
			case 210 :
				ExternalGUID = s.ReadAnsiStringValue("ExternalGUID");
				break;
			case 211 :
				DocumentTitle = s.ReadAnsiStringValue("DocumentTitle");
				break;
			case 212 :
				DocumentStatusUpdateRequired = s.ReadBooleanValue("DocumentStatusUpdateRequired");
				break;
			case 213 :
				NotesRead = s.ReadBooleanValue("NotesRead");
				break;
			case 214 :
				ImportNotesRead = s.ReadBooleanValue("ImportNotesRead");
				break;
			case 215 :
				Reference = s.ReadShortStringValue("Reference");
				break;
			case 216 :
				SFFranked = s.ReadMoneyValue("SFFranked");
				break;
			case 217 :
				SFUnfranked = s.ReadMoneyValue("SFUnfranked");
				break;
			case 218 :
				SFInterest = s.ReadMoneyValue("SFInterest");
				break;
			case 219 :
				SFCapitalGainsForeignDisc = s.ReadMoneyValue("SFCapitalGainsForeignDisc");
				break;
			case 220 :
				SFRent = s.ReadMoneyValue("SFRent");
				break;
			case 221 :
				SFSpecialIncome = s.ReadMoneyValue("SFSpecialIncome");
				break;
			case 222 :
				SFOtherTaxCredit = s.ReadMoneyValue("SFOtherTaxCredit");
				break;
			case 223 :
				SFNonResidentTax = s.ReadMoneyValue("SFNonResidentTax");
				break;
			case 224 :
				SFMemberID = s.ReadShortStringValue("SFMemberID");
				break;
			case 225 :
				SFForeignCapitalGainsCredit = s.ReadMoneyValue("SFForeignCapitalGainsCredit");
				break;
			case 226 :
				SFMemberComponent = s.ReadByteValue("SFMemberComponent");
				break;
			case 227 :
				PercentAmount = s.ReadMoneyValue("PercentAmount");
				break;
			case 228 :
				AmountTypeIsPercent = s.ReadBooleanValue("AmountTypeIsPercent");
				break;
			case 229 :
				SFFundID = s.ReadInt32Value("SFFundID");
				break;
			case 230 :
				SFMemberAccountID = s.ReadInt32Value("SFMemberAccountID");
				break;
			case 231 :
				SFFundCode = s.ReadShortStringValue("SFFundCode");
				break;
			case 232 :
				SFMemberAccountCode = s.ReadShortStringValue("SFMemberAccountCode");
				break;
			case 233 :
				SFTransactionID = s.ReadInt32Value("SFTransactionID");
				break;
			case 234 :
				SFTransactionCode = s.ReadAnsiStringValue("SFTransactionCode");
				break;
			case 235 :
				SFCapitalGainsFractionHalf = s.ReadBooleanValue("SFCapitalGainsFractionHalf");
				break;
			case 236 :
				AuditRecordID = s.ReadInt32Value("AuditRecordID");
				break;
			case 237 :
				JobCode = s.ReadShortStringValue("JobCode");
				break;
			case 238 :
				TaxInvoice = s.ReadBooleanValue("TaxInvoice");
				break;
			case 240 :
				ForeignCurrencyAmount = s.ReadMoneyValue("ForeignCurrencyAmount");
				break;
			case 241 :
				ForexDocumentDate = s.ReadJulDateValue("ForexDocumentDate");
				break;
			case 242 :
				OpeningBalanceCurrency = s.ReadShortStringValue("OpeningBalanceCurrency");
				break;
			case BeginToken :
			case EndToken :
				break;
			default:
				throw new Exception(string.Format("unexpected Code: {0} reading Dissection",token) );
				}
			token = s.ReadToken();
			}
		}


	}


}


