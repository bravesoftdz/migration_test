// **********************************************************
// This file is Auto generated by DBGen
// Any changes will be lost when the file is regenerated
// **********************************************************
using System;
using BankLink.Practice.Common.Entities;
using System.Xml.Serialization;


namespace BankLink.Practice.BooksIO
{
	/// <summary>
	/// BK - PayeeLine class
	/// </summary>
	public partial class BKPayeeLine 
	{


		/// <summary>
		/// Account property
		/// </summary>
		[XmlAttribute("Account", DataType = "string")]
		public String Account { get; set; }



		/// <summary>
		/// Percentage property
		/// </summary>
		[XmlAttribute("Percentage", DataType = "long")]
		public Int64 Percentage { get; set; }



		/// <summary>
		/// GSTClass property
		/// </summary>
		[XmlAttribute("GSTClass", DataType = "unsignedByte")]
		public byte GSTClass { get; set; }



		/// <summary>
		/// GSTHasBeenEdited property
		/// </summary>
		[XmlAttribute("GSTHasBeenEdited", DataType = "boolean")]
		public bool GSTHasBeenEdited { get; set; }



		/// <summary>
		/// GLNarration property
		/// </summary>
		[XmlAttribute("GLNarration", DataType = "string")]
		public String GLNarration { get; set; }



		/// <summary>
		/// LineType property
		/// </summary>
		[XmlAttribute("LineType", DataType = "unsignedByte")]
		public byte LineType { get; set; }



		/// <summary>
		/// GSTAmount property
		/// </summary>
		[XmlAttribute("GSTAmount", DataType = "long")]
		public Int64 GSTAmount { get; set; }



		/// <summary>
		/// SFPCFranked property
		/// </summary>
		[XmlAttribute("SFPCFranked", DataType = "long")]
		public Int64 SFPCFranked { get; set; }



		/// <summary>
		/// SFMemberID property
		/// </summary>
		[XmlAttribute("SFMemberID", DataType = "string")]
		public String SFMemberID { get; set; }



		/// <summary>
		/// SFFundID property
		/// </summary>
		[XmlAttribute("SFFundID", DataType = "int")]
		public Int32 SFFundID { get; set; }



		/// <summary>
		/// SFFundCode property
		/// </summary>
		[XmlAttribute("SFFundCode", DataType = "string")]
		public String SFFundCode { get; set; }



		/// <summary>
		/// SFTransID property
		/// </summary>
		[XmlAttribute("SFTransID", DataType = "int")]
		public Int32 SFTransID { get; set; }



		/// <summary>
		/// SFTransCode property
		/// </summary>
		[XmlAttribute("SFTransCode", DataType = "string")]
		public String SFTransCode { get; set; }



		/// <summary>
		/// SFMemberAccountID property
		/// </summary>
		[XmlAttribute("SFMemberAccountID", DataType = "int")]
		public Int32 SFMemberAccountID { get; set; }



		/// <summary>
		/// SFMemberAccountCode property
		/// </summary>
		[XmlAttribute("SFMemberAccountCode", DataType = "string")]
		public String SFMemberAccountCode { get; set; }



		/// <summary>
		/// SFEdited property
		/// </summary>
		[XmlAttribute("SFEdited", DataType = "boolean")]
		public bool SFEdited { get; set; }



		/// <summary>
		/// SFMemberComponent property
		/// </summary>
		[XmlAttribute("SFMemberComponent", DataType = "unsignedByte")]
		public byte SFMemberComponent { get; set; }



		/// <summary>
		/// SFPCUnFranked property
		/// </summary>
		[XmlAttribute("SFPCUnFranked", DataType = "long")]
		public Int64 SFPCUnFranked { get; set; }



		/// <summary>
		/// Quantity property
		/// </summary>
		[XmlAttribute("Quantity", DataType = "long")]
		public Int64 Quantity { get; set; }



		/// <summary>
		/// SFGDTDate property
		/// </summary>
		[XmlAttribute("SFGDTDate", DataType = "int")]
		public Int32 SFGDTDate { get; set; }



		/// <summary>
		/// SFTaxFreeDist property
		/// </summary>
		[XmlAttribute("SFTaxFreeDist", DataType = "long")]
		public Int64 SFTaxFreeDist { get; set; }



		/// <summary>
		/// SFTaxExemptDist property
		/// </summary>
		[XmlAttribute("SFTaxExemptDist", DataType = "long")]
		public Int64 SFTaxExemptDist { get; set; }



		/// <summary>
		/// SFTaxDeferredDist property
		/// </summary>
		[XmlAttribute("SFTaxDeferredDist", DataType = "long")]
		public Int64 SFTaxDeferredDist { get; set; }



		/// <summary>
		/// SFTFNCredits property
		/// </summary>
		[XmlAttribute("SFTFNCredits", DataType = "long")]
		public Int64 SFTFNCredits { get; set; }



		/// <summary>
		/// SFForeignIncome property
		/// </summary>
		[XmlAttribute("SFForeignIncome", DataType = "long")]
		public Int64 SFForeignIncome { get; set; }



		/// <summary>
		/// SFForeignTaxCredits property
		/// </summary>
		[XmlAttribute("SFForeignTaxCredits", DataType = "long")]
		public Int64 SFForeignTaxCredits { get; set; }



		/// <summary>
		/// SFCapitalGainsIndexed property
		/// </summary>
		[XmlAttribute("SFCapitalGainsIndexed", DataType = "long")]
		public Int64 SFCapitalGainsIndexed { get; set; }



		/// <summary>
		/// SFCapitalGainsDisc property
		/// </summary>
		[XmlAttribute("SFCapitalGainsDisc", DataType = "long")]
		public Int64 SFCapitalGainsDisc { get; set; }



		/// <summary>
		/// SFCapitalGainsOther property
		/// </summary>
		[XmlAttribute("SFCapitalGainsOther", DataType = "long")]
		public Int64 SFCapitalGainsOther { get; set; }



		/// <summary>
		/// SFOtherExpenses property
		/// </summary>
		[XmlAttribute("SFOtherExpenses", DataType = "long")]
		public Int64 SFOtherExpenses { get; set; }



		/// <summary>
		/// SFInterest property
		/// </summary>
		[XmlAttribute("SFInterest", DataType = "long")]
		public Int64 SFInterest { get; set; }



		/// <summary>
		/// SFCapitalGainsForeignDisc property
		/// </summary>
		[XmlAttribute("SFCapitalGainsForeignDisc", DataType = "long")]
		public Int64 SFCapitalGainsForeignDisc { get; set; }



		/// <summary>
		/// SFRent property
		/// </summary>
		[XmlAttribute("SFRent", DataType = "long")]
		public Int64 SFRent { get; set; }



		/// <summary>
		/// SFSpecialIncome property
		/// </summary>
		[XmlAttribute("SFSpecialIncome", DataType = "long")]
		public Int64 SFSpecialIncome { get; set; }



		/// <summary>
		/// SFOtherTaxCredit property
		/// </summary>
		[XmlAttribute("SFOtherTaxCredit", DataType = "long")]
		public Int64 SFOtherTaxCredit { get; set; }



		/// <summary>
		/// SFNonResidentTax property
		/// </summary>
		[XmlAttribute("SFNonResidentTax", DataType = "long")]
		public Int64 SFNonResidentTax { get; set; }



		/// <summary>
		/// SFForeignCapitalGainsCredit property
		/// </summary>
		[XmlAttribute("SFForeignCapitalGainsCredit", DataType = "long")]
		public Int64 SFForeignCapitalGainsCredit { get; set; }



		/// <summary>
		/// SFCapitalGainsFractionHalf property
		/// </summary>
		[XmlAttribute("SFCapitalGainsFractionHalf", DataType = "boolean")]
		public bool SFCapitalGainsFractionHalf { get; set; }



		/// <summary>
		/// SFLedgerID property
		/// </summary>
		[XmlAttribute("SFLedgerID", DataType = "int")]
		public Int32 SFLedgerID { get; set; }



		/// <summary>
		/// SFLedgerName property
		/// </summary>
		[XmlAttribute("SFLedgerName", DataType = "string")]
		public String SFLedgerName { get; set; }



		/// <summary>
		/// AuditRecordID property
		/// </summary>
		[XmlAttribute("AuditRecordID", DataType = "int")]
		public Int32 AuditRecordID { get; set; }



		/// <summary>
		/// SFOtherIncome property
		/// </summary>
		[XmlAttribute("SFOtherIncome", DataType = "long")]
		public Int64 SFOtherIncome { get; set; }



		/// <summary>
		/// SFOtherTrustDeductions property
		/// </summary>
		[XmlAttribute("SFOtherTrustDeductions", DataType = "long")]
		public Int64 SFOtherTrustDeductions { get; set; }



		/// <summary>
		/// SFCGTConcessionAmount property
		/// </summary>
		[XmlAttribute("SFCGTConcessionAmount", DataType = "long")]
		public Int64 SFCGTConcessionAmount { get; set; }



		/// <summary>
		/// SFCGTForeignCGTBeforeDisc property
		/// </summary>
		[XmlAttribute("SFCGTForeignCGTBeforeDisc", DataType = "long")]
		public Int64 SFCGTForeignCGTBeforeDisc { get; set; }



		/// <summary>
		/// SFCGTForeignCGTIndexation property
		/// </summary>
		[XmlAttribute("SFCGTForeignCGTIndexation", DataType = "long")]
		public Int64 SFCGTForeignCGTIndexation { get; set; }



		/// <summary>
		/// SFCGTForeignCGTOtherMethod property
		/// </summary>
		[XmlAttribute("SFCGTForeignCGTOtherMethod", DataType = "long")]
		public Int64 SFCGTForeignCGTOtherMethod { get; set; }



		/// <summary>
		/// SFCGTTaxPaidIndexation property
		/// </summary>
		[XmlAttribute("SFCGTTaxPaidIndexation", DataType = "long")]
		public Int64 SFCGTTaxPaidIndexation { get; set; }



		/// <summary>
		/// SFCGTTaxPaidOtherMethod property
		/// </summary>
		[XmlAttribute("SFCGTTaxPaidOtherMethod", DataType = "long")]
		public Int64 SFCGTTaxPaidOtherMethod { get; set; }



		/// <summary>
		/// SFOtherNetForeignIncome property
		/// </summary>
		[XmlAttribute("SFOtherNetForeignIncome", DataType = "long")]
		public Int64 SFOtherNetForeignIncome { get; set; }



		/// <summary>
		/// SFCashDistribution property
		/// </summary>
		[XmlAttribute("SFCashDistribution", DataType = "long")]
		public Int64 SFCashDistribution { get; set; }



		/// <summary>
		/// SFAUFrankingCreditsNZCo property
		/// </summary>
		[XmlAttribute("SFAUFrankingCreditsNZCo", DataType = "long")]
		public Int64 SFAUFrankingCreditsNZCo { get; set; }



		/// <summary>
		/// SFNonResWitholdingTax property
		/// </summary>
		[XmlAttribute("SFNonResWitholdingTax", DataType = "long")]
		public Int64 SFNonResWitholdingTax { get; set; }



		/// <summary>
		/// SFLICDeductions property
		/// </summary>
		[XmlAttribute("SFLICDeductions", DataType = "long")]
		public Int64 SFLICDeductions { get; set; }



		/// <summary>
		/// SFNonCashCGTDiscountedBeforeDiscount property
		/// </summary>
		[XmlAttribute("SFNonCashCGTDiscountedBeforeDiscount", DataType = "long")]
		public Int64 SFNonCashCGTDiscountedBeforeDiscount { get; set; }



		/// <summary>
		/// SFNonCashCGTIndexation property
		/// </summary>
		[XmlAttribute("SFNonCashCGTIndexation", DataType = "long")]
		public Int64 SFNonCashCGTIndexation { get; set; }



		/// <summary>
		/// SFNonCashCGTOtherMethod property
		/// </summary>
		[XmlAttribute("SFNonCashCGTOtherMethod", DataType = "long")]
		public Int64 SFNonCashCGTOtherMethod { get; set; }



		/// <summary>
		/// SFNonCashCGTCapitalLosses property
		/// </summary>
		[XmlAttribute("SFNonCashCGTCapitalLosses", DataType = "long")]
		public Int64 SFNonCashCGTCapitalLosses { get; set; }



		/// <summary>
		/// SFShareBrokerage property
		/// </summary>
		[XmlAttribute("SFShareBrokerage", DataType = "long")]
		public Int64 SFShareBrokerage { get; set; }



		/// <summary>
		/// SFShareConsideration property
		/// </summary>
		[XmlAttribute("SFShareConsideration", DataType = "long")]
		public Int64 SFShareConsideration { get; set; }



		/// <summary>
		/// SFShareGSTAmount property
		/// </summary>
		[XmlAttribute("SFShareGSTAmount", DataType = "long")]
		public Int64 SFShareGSTAmount { get; set; }



		/// <summary>
		/// SFShareGSTRate property
		/// </summary>
		[XmlAttribute("SFShareGSTRate", DataType = "string")]
		public String SFShareGSTRate { get; set; }



		/// <summary>
		/// SFCashDate property
		/// </summary>
		[XmlAttribute("SFCashDate", DataType = "int")]
		public Int32 SFCashDate { get; set; }



		/// <summary>
		/// SFAccrualDate property
		/// </summary>
		[XmlAttribute("SFAccrualDate", DataType = "int")]
		public Int32 SFAccrualDate { get; set; }



		/// <summary>
		/// SFRecordDate property
		/// </summary>
		[XmlAttribute("SFRecordDate", DataType = "int")]
		public Int32 SFRecordDate { get; set; }



		/// <summary>
		/// SFContractDate property
		/// </summary>
		[XmlAttribute("SFContractDate", DataType = "int")]
		public Int32 SFContractDate { get; set; }



		/// <summary>
		/// SFSettlementDate property
		/// </summary>
		[XmlAttribute("SFSettlementDate", DataType = "int")]
		public Int32 SFSettlementDate { get; set; }


		/// <summary>
		/// Class Begin Token
		/// </summary>
		public const byte BeginToken = 95;
		/// <summary>
		/// Class End Token
		/// </summary>
		public const byte EndToken = 96;
		/// <summary>
		/// Write to BKStream
		/// </summary>
		public void WriteBKStream(BankLinkTokenStreamWriter s)
		{
			s.WriteToken(95);
			s.WriteShortStringValue(97, Account);
			s.WriteMoneyValue(98, Percentage);
			s.WriteByteValue(99, GSTClass);
			s.WriteBooleanValue(100, GSTHasBeenEdited);
			s.WriteAnsiStringValue(101, GLNarration);
			s.WriteByteValue(102, LineType);
			s.WriteMoneyValue(103, GSTAmount);
			s.WriteMoneyValue(104, SFPCFranked);
			s.WriteShortStringValue(105, SFMemberID);
			s.WriteInt32Value(106, SFFundID);
			s.WriteShortStringValue(107, SFFundCode);
			s.WriteInt32Value(108, SFTransID);
			s.WriteAnsiStringValue(109, SFTransCode);
			s.WriteInt32Value(110, SFMemberAccountID);
			s.WriteShortStringValue(111, SFMemberAccountCode);
			s.WriteBooleanValue(112, SFEdited);
			s.WriteByteValue(113, SFMemberComponent);
			s.WriteMoneyValue(114, SFPCUnFranked);
			s.WriteMoneyValue(115, Quantity);
			s.WriteJulDateValue(116, SFGDTDate);
			s.WriteMoneyValue(117, SFTaxFreeDist);
			s.WriteMoneyValue(118, SFTaxExemptDist);
			s.WriteMoneyValue(119, SFTaxDeferredDist);
			s.WriteMoneyValue(120, SFTFNCredits);
			s.WriteMoneyValue(121, SFForeignIncome);
			s.WriteMoneyValue(122, SFForeignTaxCredits);
			s.WriteMoneyValue(123, SFCapitalGainsIndexed);
			s.WriteMoneyValue(124, SFCapitalGainsDisc);
			s.WriteMoneyValue(125, SFCapitalGainsOther);
			s.WriteMoneyValue(126, SFOtherExpenses);
			s.WriteMoneyValue(127, SFInterest);
			s.WriteMoneyValue(128, SFCapitalGainsForeignDisc);
			s.WriteMoneyValue(129, SFRent);
			s.WriteMoneyValue(130, SFSpecialIncome);
			s.WriteMoneyValue(131, SFOtherTaxCredit);
			s.WriteMoneyValue(132, SFNonResidentTax);
			s.WriteMoneyValue(133, SFForeignCapitalGainsCredit);
			s.WriteBooleanValue(134, SFCapitalGainsFractionHalf);
			s.WriteInt32Value(135, SFLedgerID);
			s.WriteAnsiStringValue(136, SFLedgerName);
			s.WriteInt32Value(137, AuditRecordID);
			s.WriteMoneyValue(138, SFOtherIncome);
			s.WriteMoneyValue(139, SFOtherTrustDeductions);
			s.WriteMoneyValue(140, SFCGTConcessionAmount);
			s.WriteMoneyValue(141, SFCGTForeignCGTBeforeDisc);
			s.WriteMoneyValue(142, SFCGTForeignCGTIndexation);
			s.WriteMoneyValue(143, SFCGTForeignCGTOtherMethod);
			s.WriteMoneyValue(144, SFCGTTaxPaidIndexation);
			s.WriteMoneyValue(145, SFCGTTaxPaidOtherMethod);
			s.WriteMoneyValue(146, SFOtherNetForeignIncome);
			s.WriteMoneyValue(147, SFCashDistribution);
			s.WriteMoneyValue(148, SFAUFrankingCreditsNZCo);
			s.WriteMoneyValue(149, SFNonResWitholdingTax);
			s.WriteMoneyValue(150, SFLICDeductions);
			s.WriteMoneyValue(151, SFNonCashCGTDiscountedBeforeDiscount);
			s.WriteMoneyValue(152, SFNonCashCGTIndexation);
			s.WriteMoneyValue(153, SFNonCashCGTOtherMethod);
			s.WriteMoneyValue(154, SFNonCashCGTCapitalLosses);
			s.WriteMoneyValue(155, SFShareBrokerage);
			s.WriteMoneyValue(156, SFShareConsideration);
			s.WriteMoneyValue(157, SFShareGSTAmount);
			s.WriteShortStringValue(158, SFShareGSTRate);
			s.WriteJulDateValue(159, SFCashDate);
			s.WriteJulDateValue(160, SFAccrualDate);
			s.WriteJulDateValue(161, SFRecordDate);
			s.WriteJulDateValue(162, SFContractDate);
			s.WriteJulDateValue(163, SFSettlementDate);
			s.WriteToken(96);
		}

		/// <summary>
		/// Default Constructor 
		/// </summary>
		public BKPayeeLine ()
		{}
		/// <summary>
		/// Construct from BKStreamReader
		/// </summary>
		public BKPayeeLine (BankLinkTokenStreamReader s)
		{
			var token = BeginToken;
			while (token != EndToken)
			{
				switch (token)
				{
			case 97 :
				Account = s.ReadShortStringValue("Account");
				break;
			case 98 :
				Percentage = s.ReadMoneyValue("Percentage");
				break;
			case 99 :
				GSTClass = s.ReadByteValue("GSTClass");
				break;
			case 100 :
				GSTHasBeenEdited = s.ReadBooleanValue("GSTHasBeenEdited");
				break;
			case 101 :
				GLNarration = s.ReadAnsiStringValue("GLNarration");
				break;
			case 102 :
				LineType = s.ReadByteValue("LineType");
				break;
			case 103 :
				GSTAmount = s.ReadMoneyValue("GSTAmount");
				break;
			case 104 :
				SFPCFranked = s.ReadMoneyValue("SFPCFranked");
				break;
			case 105 :
				SFMemberID = s.ReadShortStringValue("SFMemberID");
				break;
			case 106 :
				SFFundID = s.ReadInt32Value("SFFundID");
				break;
			case 107 :
				SFFundCode = s.ReadShortStringValue("SFFundCode");
				break;
			case 108 :
				SFTransID = s.ReadInt32Value("SFTransID");
				break;
			case 109 :
				SFTransCode = s.ReadAnsiStringValue("SFTransCode");
				break;
			case 110 :
				SFMemberAccountID = s.ReadInt32Value("SFMemberAccountID");
				break;
			case 111 :
				SFMemberAccountCode = s.ReadShortStringValue("SFMemberAccountCode");
				break;
			case 112 :
				SFEdited = s.ReadBooleanValue("SFEdited");
				break;
			case 113 :
				SFMemberComponent = s.ReadByteValue("SFMemberComponent");
				break;
			case 114 :
				SFPCUnFranked = s.ReadMoneyValue("SFPCUnFranked");
				break;
			case 115 :
				Quantity = s.ReadMoneyValue("Quantity");
				break;
			case 116 :
				SFGDTDate = s.ReadJulDateValue("SFGDTDate");
				break;
			case 117 :
				SFTaxFreeDist = s.ReadMoneyValue("SFTaxFreeDist");
				break;
			case 118 :
				SFTaxExemptDist = s.ReadMoneyValue("SFTaxExemptDist");
				break;
			case 119 :
				SFTaxDeferredDist = s.ReadMoneyValue("SFTaxDeferredDist");
				break;
			case 120 :
				SFTFNCredits = s.ReadMoneyValue("SFTFNCredits");
				break;
			case 121 :
				SFForeignIncome = s.ReadMoneyValue("SFForeignIncome");
				break;
			case 122 :
				SFForeignTaxCredits = s.ReadMoneyValue("SFForeignTaxCredits");
				break;
			case 123 :
				SFCapitalGainsIndexed = s.ReadMoneyValue("SFCapitalGainsIndexed");
				break;
			case 124 :
				SFCapitalGainsDisc = s.ReadMoneyValue("SFCapitalGainsDisc");
				break;
			case 125 :
				SFCapitalGainsOther = s.ReadMoneyValue("SFCapitalGainsOther");
				break;
			case 126 :
				SFOtherExpenses = s.ReadMoneyValue("SFOtherExpenses");
				break;
			case 127 :
				SFInterest = s.ReadMoneyValue("SFInterest");
				break;
			case 128 :
				SFCapitalGainsForeignDisc = s.ReadMoneyValue("SFCapitalGainsForeignDisc");
				break;
			case 129 :
				SFRent = s.ReadMoneyValue("SFRent");
				break;
			case 130 :
				SFSpecialIncome = s.ReadMoneyValue("SFSpecialIncome");
				break;
			case 131 :
				SFOtherTaxCredit = s.ReadMoneyValue("SFOtherTaxCredit");
				break;
			case 132 :
				SFNonResidentTax = s.ReadMoneyValue("SFNonResidentTax");
				break;
			case 133 :
				SFForeignCapitalGainsCredit = s.ReadMoneyValue("SFForeignCapitalGainsCredit");
				break;
			case 134 :
				SFCapitalGainsFractionHalf = s.ReadBooleanValue("SFCapitalGainsFractionHalf");
				break;
			case 135 :
				SFLedgerID = s.ReadInt32Value("SFLedgerID");
				break;
			case 136 :
				SFLedgerName = s.ReadAnsiStringValue("SFLedgerName");
				break;
			case 137 :
				AuditRecordID = s.ReadInt32Value("AuditRecordID");
				break;
			case 138 :
				SFOtherIncome = s.ReadMoneyValue("SFOtherIncome");
				break;
			case 139 :
				SFOtherTrustDeductions = s.ReadMoneyValue("SFOtherTrustDeductions");
				break;
			case 140 :
				SFCGTConcessionAmount = s.ReadMoneyValue("SFCGTConcessionAmount");
				break;
			case 141 :
				SFCGTForeignCGTBeforeDisc = s.ReadMoneyValue("SFCGTForeignCGTBeforeDisc");
				break;
			case 142 :
				SFCGTForeignCGTIndexation = s.ReadMoneyValue("SFCGTForeignCGTIndexation");
				break;
			case 143 :
				SFCGTForeignCGTOtherMethod = s.ReadMoneyValue("SFCGTForeignCGTOtherMethod");
				break;
			case 144 :
				SFCGTTaxPaidIndexation = s.ReadMoneyValue("SFCGTTaxPaidIndexation");
				break;
			case 145 :
				SFCGTTaxPaidOtherMethod = s.ReadMoneyValue("SFCGTTaxPaidOtherMethod");
				break;
			case 146 :
				SFOtherNetForeignIncome = s.ReadMoneyValue("SFOtherNetForeignIncome");
				break;
			case 147 :
				SFCashDistribution = s.ReadMoneyValue("SFCashDistribution");
				break;
			case 148 :
				SFAUFrankingCreditsNZCo = s.ReadMoneyValue("SFAUFrankingCreditsNZCo");
				break;
			case 149 :
				SFNonResWitholdingTax = s.ReadMoneyValue("SFNonResWitholdingTax");
				break;
			case 150 :
				SFLICDeductions = s.ReadMoneyValue("SFLICDeductions");
				break;
			case 151 :
				SFNonCashCGTDiscountedBeforeDiscount = s.ReadMoneyValue("SFNonCashCGTDiscountedBeforeDiscount");
				break;
			case 152 :
				SFNonCashCGTIndexation = s.ReadMoneyValue("SFNonCashCGTIndexation");
				break;
			case 153 :
				SFNonCashCGTOtherMethod = s.ReadMoneyValue("SFNonCashCGTOtherMethod");
				break;
			case 154 :
				SFNonCashCGTCapitalLosses = s.ReadMoneyValue("SFNonCashCGTCapitalLosses");
				break;
			case 155 :
				SFShareBrokerage = s.ReadMoneyValue("SFShareBrokerage");
				break;
			case 156 :
				SFShareConsideration = s.ReadMoneyValue("SFShareConsideration");
				break;
			case 157 :
				SFShareGSTAmount = s.ReadMoneyValue("SFShareGSTAmount");
				break;
			case 158 :
				SFShareGSTRate = s.ReadShortStringValue("SFShareGSTRate");
				break;
			case 159 :
				SFCashDate = s.ReadJulDateValue("SFCashDate");
				break;
			case 160 :
				SFAccrualDate = s.ReadJulDateValue("SFAccrualDate");
				break;
			case 161 :
				SFRecordDate = s.ReadJulDateValue("SFRecordDate");
				break;
			case 162 :
				SFContractDate = s.ReadJulDateValue("SFContractDate");
				break;
			case 163 :
				SFSettlementDate = s.ReadJulDateValue("SFSettlementDate");
				break;
			case BeginToken :
			case EndToken :
				break;
			default:
				throw new Exception(string.Format("unexpected Code: {0} reading PayeeLine",token) );
				}
			token = s.ReadToken();
			}
		}


	}


}


