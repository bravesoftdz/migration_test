// **********************************************************
// This file is Auto generated by DBGen
// Any changes will be lost when the file is regenerated
// **********************************************************
using System;
using BankLink.Practice.Common.Entities;
using System.Xml.Serialization;


namespace BankLink.Practice.BooksIO
{
	/// <summary>
	/// BK - BudgetHeader class
	/// </summary>
	public partial class BKBudgetHeader 
	{


		/// <summary>
		/// StartDate property
		/// </summary>
		[XmlAttribute("StartDate", DataType = "int")]
		public Int32 StartDate { get; set; }



		/// <summary>
		/// Name property
		/// </summary>
		[XmlAttribute("Name", DataType = "string")]
		public String Name { get; set; }



		/// <summary>
		/// EstimatedOpeningBankBalance property
		/// </summary>
		[XmlAttribute("EstimatedOpeningBankBalance", DataType = "long")]
		public Int64 EstimatedOpeningBankBalance { get; set; }



		/// <summary>
		/// IsInclusive property
		/// </summary>
		[XmlAttribute("IsInclusive", DataType = "boolean")]
		public bool IsInclusive { get; set; }



		/// <summary>
		/// AutomaticallyCalculateGST property
		/// </summary>
		[XmlAttribute("AutomaticallyCalculateGST", DataType = "boolean")]
		public bool AutomaticallyCalculateGST { get; set; }


		/// <summary>
		/// Class Begin Token
		/// </summary>
		public const byte BeginToken = 110;
		/// <summary>
		/// Class End Token
		/// </summary>
		public const byte EndToken = 111;
		/// <summary>
		/// Write to BKStream
		/// </summary>
		public void WriteBKStream(BankLinkTokenStreamWriter s)
		{
			s.WriteToken(110);
			s.WriteJulDateValue(112, StartDate);
			s.WriteShortStringValue(113, Name);
			s.WriteMoneyValue(114, EstimatedOpeningBankBalance);
			s.WriteBooleanValue(115, IsInclusive);
			s.WriteBooleanValue(116, AutomaticallyCalculateGST);
			s.WriteToken(111);
		}

		/// <summary>
		/// Default Constructor 
		/// </summary>
		public BKBudgetHeader ()
		{}
		/// <summary>
		/// Construct from BKStreamReader
		/// </summary>
		public BKBudgetHeader (BankLinkTokenStreamReader s)
		{
			var token = BeginToken;
			while (token != EndToken)
			{
				switch (token)
				{
			case 112 :
				StartDate = s.ReadJulDateValue("StartDate");
				break;
			case 113 :
				Name = s.ReadShortStringValue("Name");
				break;
			case 114 :
				EstimatedOpeningBankBalance = s.ReadMoneyValue("EstimatedOpeningBankBalance");
				break;
			case 115 :
				IsInclusive = s.ReadBooleanValue("IsInclusive");
				break;
			case 116 :
				AutomaticallyCalculateGST = s.ReadBooleanValue("AutomaticallyCalculateGST");
				break;
			case BeginToken :
			case EndToken :
				break;
			default:
				throw new Exception(string.Format("unexpected Code: {0} reading BudgetHeader",token) );
				}
			token = s.ReadToken();
			}
		}


	}


}


